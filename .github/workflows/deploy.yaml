name: CI/CD to Kubernetes via ArgoCD

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write      # needed to commit/push manifest changes
  packages: write      # needed to push images to ghcr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/api"
          TAG="${{ github.sha }}"
          docker build -t "$IMAGE:$TAG" -f Dockerfile.api .

      - name: Push Docker Image
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/api"
          TAG="${{ github.sha }}"
          docker push "$IMAGE:$TAG"

      - name: Update Helm values (image repo and tag)
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          IMAGE_REPO="ghcr.io/${{ github.repository }}/api"
          IMAGE_TAG="${{ github.sha }}"
          # Update image.repository
          sed -i -E "s|^([[:space:]]*repository:[[:space:]]*).*$|\1${IMAGE_REPO}|" api/values.yaml
          # Update image.tag
          sed -i -E "s|^([[:space:]]*tag:[[:space:]]*).*$|\1${IMAGE_TAG}|" api/values.yaml

      - name: Commit updated manifest
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add api/values.yaml
          git commit -m "Update api image to ghcr.io/${{ github.repository }}/api:${{ github.sha }}" || echo "No changes to commit"
          git pull --rebase origin "${{ github.ref_name }}" || true
          git push origin "${{ github.ref_name }}" || true
      - name: Trigger ArgoCD Sync
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && env.ARGOCD_SERVER != '' && env.ARGOCD_AUTH_TOKEN != ''
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
          ARGOCD_APP: ${{ vars.ARGOCD_APP }}
        run: |
          set -euo pipefail
          APP_NAME="${ARGOCD_APP:-devops-local-starter}"
          URL="${ARGOCD_SERVER%/}/api/v1/applications/${APP_NAME}/sync"
          echo "Triggering ArgoCD sync for app: ${APP_NAME} at ${URL}"
          for attempt in 1 2 3; do
            if curl -k -sS -f -X POST "$URL" \
              -H "Authorization: Bearer ${ARGOCD_AUTH_TOKEN}" \
              -H "Content-Type: application/json" \
              -d '{"dryRun":false,"prune":false,"strategy":{"hook":{"force":true}},"revision":""}'; then
              echo "ArgoCD sync triggered successfully"
              break
            fi
            echo "Sync attempt $attempt failed; retrying in 5s..."
            sleep 5
          done